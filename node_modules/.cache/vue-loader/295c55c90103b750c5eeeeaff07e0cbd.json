{"remainingRequest":"/Users/tylerharris/Desktop/SocialMedia/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tylerharris/Desktop/SocialMedia/src/components/Profile.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/tylerharris/Desktop/SocialMedia/src/components/Profile.vue","mtime":1618846971869},{"path":"/Users/tylerharris/Desktop/SocialMedia/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tylerharris/Desktop/SocialMedia/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/tylerharris/Desktop/SocialMedia/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/tylerharris/Desktop/SocialMedia/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tylerharris/Desktop/SocialMedia/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouaGVhZGVyewpmb250LXdlaWdodDogYm9sZDsKZm9udC1zaXplOiAzMHB4Owp9Ci5wcm9maWxlcGljewptYXJnaW46IDEwcHg7Cn0KLmZyaWVuZHN7Cgp9Ci5lZGl0IHsKICBkaXNwbGF5OiBmbGV4Owp9Ci50aW1lbGluZSB7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKfQouZG9pdCB7CiAgbWFyZ2luLXRvcDogMTAwcHg7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKfQoudXBsb2FkIGgyIHsKICBtYXJnaW46IDBweDsKfQoKLnVwbG9hZCBpbWcgewogIG1heC13aWR0aDogMzAwcHg7Cn0K"},{"version":3,"sources":["Profile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Profile.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\n<div class=\"container\">\n  <h1>Welcome to {{this.profile.name}}'s Profile</h1>\n  <div class=\"row\">\n    <div class=\"col-sm-6\" style=\"background-color:lightgreen;\">\n      <div class=\"header\" >Profile Info</div>\n      <img src=\"/images/icon2.png\" style=\"width: 50%\" class=\"profilepic\">\n      <div class=\"container\" >\n        <p> Username: @{{this.profile.username}} </p>\n        <p> Email: {{this.profile.email}} </p>\n        <p> City: {{this.profile.city}} </p>\n  <div class=\"edit\">\n  <div class=\"upload\" v-if=\"findProfile\">\n    <input v-model=\"findProfile.name\">\n    <p></p>\n    <input v-model=\"findProfile.email\">\n    <p></p>\n    <input v-model=\"findProfile.city\">\n    <div class=\"actions\" v-if=\"findProfile\">\n      <button @click=\"editProfile(findProfile)\">Edit</button>\n    </div>\n    <p></p>\n  </div>\n</div>\n\n    </div>\n    </div>\n\n    <div class=\"col-sm-6\" style=\"background-color:lightblue;\">\n\n      <div v-if= \"loggedIn()\">\n      <div class = \"header\">Timeline</div>\n      <p>Add to {{this.profile.name}}'s timeline!</p>\n      <form class=\"timeline\" v-on:submit.prevent=\"addComment\">\n        <input v-model=\"addedName\" placeholder=\"Name\">\n        <textarea v-model=\"addedComment\" placeholder=\"Comment\"></textarea>\n        <br />\n        <button type=\"submit\">Submit</button>\n      </form>\n      <h3>Comments</h3>\n      <div v-for=\"comment in comments\" v-bind:key=\"comment._id\">\n        <hr>\n        <p>{{comment.comment}}</p>\n        <p><i>--{{comment.name}}</i></p>\n      </div>\n      <!-- <div class=\"container\" v-for=\"user in friends\" :key=\"user.id\">\n      <div class=\"table\">\n        <td>{{user.name}}</td>\n        <td>{{user.email}}</td>\n        <td>{{user.address.city}} </td>\n      </div>\n        <button class=\"auto\" v-on:click= \"deleteFriend(user)\">Unfollow</button>\n      </div> -->\n      </div>\n      <div class=\"doit\" v-else><h1>Log-in or Register to be able to post a comment on this {{this.profile.name}}'s page!</h1></div>\n    </div>\n  </div>\n</div>\n\n</template>\n\n<script>\nimport axios from 'axios';\nexport default {\n  name: 'Profile',\n  data() {\n    return{\n      findProfile: null,\n      profile: {},\n      loading: true,\n      addedName: '',\n      addedComment: '',\n      comments: [],\n    }\n  },\n  computed: {\n    friends() {\n      return this.$root.$data.friends;\n    },\n    posts() {\n      return this.$root.$data.getPosts();\n    },\n    currentProfile() {\n      return this.$root.$data.currentProfile;\n    },\n  },\n  async created() {\n  this.getProfile();\n  //this.findUser = this.$root.$data.currentUser;\n  this.profile = (await axios.get(\"/api/profiles/\" + this.$route.params.id)).data;\n  //axios.get(\"/api/followers/\" + this.findUser._id);\n},\n  methods: {\n    loggedIn () {\n    if (this.$root.$data.user != null) {\n      return true\n    }\n  },\n    addComment() {\n      this.comments.push({\n        name: this.addedName,\n        comment: this.addedComment,\n      })\n },\n    async getProfile() {\n  try {\n    let response = await axios.get(\"/api/profiles\");\n    this.profiles = response.data;\n    return true;\n  } catch (error) {\n    console.log(error);\n  }\n},\n    async editProfile(profile) {\n     try {\n       await axios.put(\"/api/profiles/\" + profile._id, {\n         name: this.findProfile.name,\n         email: this.findProfile.email,\n         city: this.findProfile.address.city,\n       });\n       this.findProfile = null;\n       this.getProfile();\n       return true;\n     } catch (error) {\n       console.log(error);\n     }\n   },\n\n    // deleteFriend(user) {\n    //   let findUser = this.$root.$data.friends.indexOf(user);\n    //   this.$root.$data.friends.splice(findUser, 1);\n    // },\n\n    toggleForm() {\n      this.posting = !this.posting;\n    },\n    addPosts() {\n      this.$root.$data.addPosts(this.username, this.post);\n      this.username = \"\";\n      this.post = \"\";\n      this.posting = false;\n    },\n  }\n}\n\n</script>\n\n<style>\n.header{\nfont-weight: bold;\nfont-size: 30px;\n}\n.profilepic{\nmargin: 10px;\n}\n.friends{\n\n}\n.edit {\n  display: flex;\n}\n.timeline {\n  display: flex;\n  justify-content: center;\n}\n.doit {\n  margin-top: 100px;\n  display: flex;\n  justify-content: center;\n}\n.upload h2 {\n  margin: 0px;\n}\n\n.upload img {\n  max-width: 300px;\n}\n</style>\n"]}]}